/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

/ {
	keymap {s
		compatible = "zmk,keymap";

		default_layer {

			bindings = <
&kp ESC   &kp F1    &kp F2 &kp F3 &kp F4   &kp F5   &kp F6                     &kp F7 &kp F8   &kp F9    &kp F10 &kp F11  &kp F12    &kp BSPC
&kp PSCRN    &kp GRAVE &kp N1 &kp N2 &kp N3   &kp N4   &kp N5                     &kp N6 &kp N7   &kp N8    &kp N9  &kp N0   &kp LBKT   &kp RBKT
&kp PSCRN    &kp TAB   &kp Q  &kp W  &kp E    &kp R    &kp T                      &kp Y  &kp U    &kp I     &kp O   &kp P    &kp MINUS  &kp PSCRN 
&kp PSCRN    &kp LCTRL &kp A  &kp S  &kp D    &kp F    &kp G                      &kp H  &kp J    &kp K     &kp L   &kp SEMI &kp SQT    &kp BSLH
&kp PSCRN    &kp LSHFT &kp Z  &kp X  &kp C    &kp V    &kp B                      &kp N  &kp M    &kp COMMA &kp DOT &kp FSLH &kp RSHFT  &kp PSCRN
&kp PSCRN    &kp LCTRL &kp LGUI &kp LBKT &kp RBKT    &mo 1 &kp SPACE     &kp ENTER  &mo 2      &kp EQUAL &kp RGUI  &kp RALT &kp RCTRL  &kp PSCRN
                                 &kp TAB &kp HOME &kp BSPC  &kp DEL   &kp PG_DN  &kp LALT &kp PG_UP &kp LCTRL
			>;
		};

		lower_layer {

			bindings = <
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4  &out OUT_BLE               &out OUT_USB  &kp PSCRN  &kp PSCRN  &kp PSCRN  &kp PSCRN  &kp PSCRN  &kp PSCRN
&sys_reset &kp GRAVE    &kp EXCL     &kp AT       &kp HASH     &kp DOLLAR    &kp PRCNT                  &kp CARET  &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp PSCRN  &sys_reset
&kp PSCRN     &ext_power EP_ON  &ext_power EP_OFF  &ext_power EP_TOG   &bootloader  &kp PSCRN   &kp PSCRN        &kp PSCRN     &kp MINUS   &kp KP_PLUS &kp LBRC &kp RBRC  &kp PIPE    &kp PSCRN
&kp PSCRN    &kp PSCRN             &kp PSCRN             &kp PSCRN              &kp PSCRN       &kp PSCRN   &kp PSCRN       &kp PSCRN      &kp PSCRN      &kp PSCRN      &kp PSCRN   &kp PSCRN    &kp PSCRN      &kp PSCRN
&kp PSCRN    &kp PSCRN             &kp PSCRN             &kp PSCRN              &kp PSCRN       &kp PSCRN   &kp PSCRN       &kp PSCRN      &kp PSCRN      &kp PSCRN      &kp PSCRN   &kp PSCRN    &kp PSCRN      &kp PSCRN
&bootloader &kp PSCRN           &kp PSCRN             &kp PSCRN              &kp PSCRN       &kp PSCRN   &kp PSCRN       &kp PSCRN      &kp PSCRN      &kp PSCRN      &kp PSCRN   &kp PSCRN    &kp PSCRN   &bootloader
                                                &kp PSCRN              &kp PSCRN       &kp PSCRN   &kp PSCRN       &kp K_VOL_DN  &kp K_MUTE  &kp K_VOL_UP  &kp PSCRN
			>;
		};

		raise_layer {

			bindings = <
&kp PSCRN    &kp PSCRN    &kp PSCRN &kp PSCRN &kp PSCRN   &kp PSCRN   &kp PSCRN                     &kp PSCRN &kp PSCRN   &kp PSCRN    &kp PSCRN  &kp PSCRN &kp PSCRN     &kp PSCRN
&kp PSCRN    &kp PSCRN  &kp PSCRN &kp PSCRN &kp PSCRN     &kp PSCRN   &kp PSCRN                     &kp PSCRN &kp PSCRN   &kp PSCRN    &kp PSCRN  &kp PSCRN &kp PRCNT     &kp PSCRN
&kp PSCRN    &kp PSCRN  &kp PSCRN &kp PSCRN &kp PSCRN     &kp PSCRN   &kp LBKT                   &kp RBKT  &kp KP_N7  &kp KP_N8  &kp KP_N9    &kp KP_DIVIDE  &kp PSCRN  &kp PSCRN 
&kp PSCRN    &kp PSCRN &kp LEFT  &kp DOWN &kp UP &kp RIGHT &kp LPAR                  &kp RPAR  &kp KP_N4  &kp KP_N5  &kp KP_N6    &kp KP_MULTIPLY  &kp PSCRN   &kp PSCRN
&kp PSCRN    &kp PSCRN    &kp PSCRN &kp PSCRN &kp PSCRN   &kp PSCRN   &kp PSCRN                     &kp PSCRN    &kp KP_N1  &kp KP_N2  &kp KP_N3    &kp KP_MINUS &kp PSCRN    &kp PSCRN
&kp PSCRN    &kp PSCRN    &kp PSCRN &kp PSCRN &kp PSCRN   &kp PSCRN   &kp PSCRN                     &kp PSCRN    &kp KP_N0  &kp KP_DOT &kp KP_EQUAL &kp KP_PLUS   &kp PSCRN    &kp PSCRN
                           &kp PSCRN &kp PSCRN   &kp PSCRN   &kp PSCRN                     &kp PSCRN &kp PSCRN     &kp PSCRN    &kp PSCRN
			>;
		};
	};
};
